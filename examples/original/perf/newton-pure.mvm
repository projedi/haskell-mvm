int PREC;
PREC = 10;

// Deal with it.
foreign double floor(double x);

double pow(double x, int y) {
  int i;
  double res = 1;
  for (i in 1..y) {
    res = res * x;
  }
  return res;
}

double fabs(double x) {
  if (x < 0)
    return -x;
  return x;
}

int fact(int n) {
  int res;
  int i;
  res = 1;
  for(i in 2..n) {
    res = res * i;
  }
  return res;
}

double sin(double x) {
  int i;
  double res;
  res = 0;
  x = x - 6.28 * floor(x / 6.28);
  for(i in 0..PREC) {
    res += pow(-1.0, i) / fact(2*i + 1) * pow(x, 2*i + 1);
  }
  if (res > 1.0) {
    return 1.0;
  }
  if (res < -1.0) {
    return -1.0;
  }
  return res;
}

double newton(double xbase) {
  double func(double d) {
      return d*d - d*d*d + 2 + sin(d);
  }
  double x = xbase;
  double xp = x - 0.01;
  double y = func(x);
  double yp = func(yp);
  int repeat = 0;
  while ((fabs(y) > 1e-8) && (repeat < 10000))  {
      double temp = x;
      y = func(x);
      x = x - (x - xp) * y / (y - yp);      
      xp = temp;
      yp = y;
      repeat += 1;
  }
  return x;
}
int repeat;
double root;
for (repeat in 0 .. 100000) {
  root = newton(10 + repeat / 400.0);
}
print("root=", root, "\n");
